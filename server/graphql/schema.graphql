# Enum Type
enum Gender {
  MALE
  FEMALE
  ETC
}
###

# Custom Scalar Type
type Address {
  location: String!
  detail: String
}
###

# Union Type
union Category = Backend | Frontend

type Backend {
  frameworks: [String!]!
  database: [String!]!
}

type Frontend {
  frameworks: [String!]!
  native: Boolean!
}
###

# Many To Many Relation
type Friendship {
  id: Int!
  friend_a: Programmer!
  friend_b: Programmer!
  metYear: Int!
}
###

type Programmer {
  id: Int!
  name: String!
  gender: Gender!
  address: Address!
  grades: [Float!]! # List Type
  category: Category! # Union Type
  friends: [Friendship!]! # Many To Many Relation
}

type Query {
  programmers: [Programmer]!
  programmer(id: Int!): Programmer!
}

# Input Type
input ProgrammerInput {
  name: String!
  gender: Gender!
  grades: [Float!]!
  addressLocation: String!
  addressDetail: String
  category: String!
  frameworks: [String!]!
  database: [String!]
  native: Boolean
  friends: [Int!]!
}
###

type Mutation {
  addProgrammer(input: ProgrammerInput!): Programmer
}

type Subscription {
  programmerAdded: Programmer!
  programmerLoaded: Programmer!
}
